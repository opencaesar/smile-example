@dc:title "Flight System Electrical"
@dc:type "Discipline"
@dc:^description "The Flight System Electrical vocabulary defines concepts and properties for flight system electrical engineering."
@dc:rights """Copyright 2010-2019, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology.
This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses,a or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."""
@owl:versionInfo "0.5.0"
@dc:creator "Jet Propulsion Laboratory"
@dc:date "2019-11-25"
vocabulary <http://imce.jpl.nasa.gov/discipline/fse/fse> with # as fse {

	extends <http://imce.jpl.nasa.gov/foundation/project>

	extends <http://iso.org/80000-4-rules>

	extends <http://iso.org/80000-4-magnitudes-1>

	@rdfs:label "Reference Designated Element"
	aspect ReferenceDesignatedElement :> base:IdentifiedElement

	@rdfs:label "End Circuit Presenting Element"
	aspect EndCircuitPresentingElement :> mission:PresentingElement

	@rdfs:label "Mass Constrained Element"
	aspect MassConstrainedElement :> metrology:Object

	@rdfs:label "Mass Allocated Element"
	aspect MassAllocatedElement :> MassConstrainedElement

	@rdfs:label "Mass Estimated Element"
	aspect MassEstimatedElement :> MassConstrainedElement

	@rdfs:label "Mass Proxy"
	aspect MassProxy :> MassEstimatedElement

	@rdfs:label "Flight Hardware Component"
	concept FlightHardwareComponent :> mission:Component, ReferenceDesignatedElement

	@rdfs:label "Subsystem"
	concept Subsystem :> FlightHardwareComponent, MassAllocatedElement [
		restricts all relation base:aggregates to Assembly
	]

	@rdfs:label "Assembly"
	concept Assembly :> FlightHardwareComponent, EndCircuitPresentingElement, MassEstimatedElement [
		restricts all relation base:isAggregatedIn to Subsystem
	]

	@rdfs:label "Consumable Mass"
	concept ConsumableMass :> MassProxy

	@rdfs:label "End Circuit"
	concept EndCircuit :> mission:Interface [
		restricts all relation mission:isJoinedIn to Function
		restricts all relation mission:isPresentedBy to EndCircuitPresentingElement
	]

	@rdfs:label "Function"
	concept Function :> mission:Junction [
		restricts all relation mission:joins to EndCircuit
	]

	ref concept project:WorkPackage :> MassAllocatedElement, MassEstimatedElement

	@rdfs:label "Is Mass Of"
	relation entity IsMassOf :> metrology:IsQuantityOf [
		from 80000-4-quantities:mass
		to MassConstrainedElement
		forward isMassOf
		reverse hasMass
	]

	@rdfs:label "Is Mass Estimation Of"
	relation entity IsMassEstimationOf :> IsMassOf [
		from 80000-4-quantities:mass
		to MassEstimatedElement
		forward isMassEstimationOf
		reverse hasMassEstimation
	]

	@rdfs:label "Is MEV Mass Of"
	relation entity IsMEVMassOf :> IsMassEstimationOf [
		from 80000-4-quantities:mass
		to MassEstimatedElement
		forward isMEVMassOf
		reverse hasMEVMass
	]

	@rdfs:label "Is MGA Mass Of"
	relation entity IsMGAMassOf :> IsMassEstimationOf [
		from 80000-4-quantities:mass
		to MassEstimatedElement
		forward isMGAMassOf
		reverse hasMGAMass
	]

	@rdfs:label "Is CBE Mass Of"
	relation entity IsCBEMassOf :> IsMassEstimationOf [
		from 80000-4-quantities:mass
		to MassEstimatedElement
		forward isCBEMassOf
		reverse hasCBEMassOf
	]

	@rdfs:label "Is Mass Allocation Of"
	relation entity IsMassAllocationOf :> IsMassOf [
		from 80000-4-quantities:mass
		to MassAllocatedElement
		forward isMassAllocationOf
		reverse hasMassAllocation
	]

	@rdfs:label "Is Mass Limit Of"
	relation entity IsMassLimitOf :> IsMassAllocationOf [
		from 80000-4-quantities:mass
		to MassAllocatedElement
		forward isMassLimitOf
		reverse hasMassLimit
	]

	@rdfs:label "Connects Assembly"
	relation entity ConnectsAssembly :> analysis:AnalyzedElement, analysis:CharacterizedElement [
		from Function
		to Assembly
		@rdfs:label "connects assembly"
		forward connectsAssembly
		asymmetric
		irreflexive
	]

	@rdfs:label "Connects Assembly1"
	relation entity ConnectsAssembly1 :> ConnectsAssembly [
		from Function
		to Assembly
		@rdfs:label "connects assembly 1"
		forward connectsAssembly1
		asymmetric
		irreflexive
	]

	@rdfs:label "Connects Assembly2"
	relation entity ConnectsAssembly2 :> ConnectsAssembly [
		from Function
		to Assembly
		@rdfs:label "connects assembly 2"
		forward connectsAssembly2
		asymmetric
		irreflexive
	]

	enumerated scalar EndCircuitDirection :> xsd:string [
		"in"^^xsd:string,
		"inout"^^xsd:string,
		"out"^^xsd:string
	]

	enumerated scalar FunctionDirection :> xsd:string [
		"1to2"^^xsd:string,
		"2to1"^^xsd:string,
		"Bidirectional"^^xsd:string,
		"Undefined"^^xsd:string
	]

	@rdfs:label "has reference designator"
	scalar property hasReferenceDesignator :> base:hasIdentifier [
		domain ReferenceDesignatedElement
		range xsd:string
	]

	@rdfs:label "has acronym"
	scalar property hasAcronym :> base:hasIdentifier [
		domain ReferenceDesignatedElement
		range xsd:string
	]

	@rdfs:label "has function number"
	scalar property hasFunctionNumber :> base:hasIdentifier [
		domain Function
		range xsd:string
	]

	@rdfs:label "has function direction"
	scalar property hasFunctionDirection [
		domain Function
		range FunctionDirection
	]

	@rdfs:label "has end circuit identifier"
	scalar property hasEndCircuitIdentifier :> base:hasIdentifier [
		domain EndCircuit
		range xsd:string
	]

	@rdfs:label "has end circuit direction"
	scalar property hasEndCircuitDirection [
		domain EndCircuit
		range EndCircuitDirection
	]

	@rdfs:label "has multiplicity"
	scalar property hasMultiplicity [
		domain MassProxy
		range xsd:integer
	]

}